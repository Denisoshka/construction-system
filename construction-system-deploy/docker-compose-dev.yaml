version: '3.8'

services:
  rover:
    build: ./rover
    command: supergraph compose --config /opt/supergraph/supergraph.yaml --output /opt/supergraph/supergraph.graphqls --elv2-license=accept
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    volumes:
      - ./apollo/router/supergraph.yaml:/opt/supergraph/supergraph.yaml
    networks:
      - dev-net

  router:
    image: ghcr.io/apollographql/router:v1.61.3-rc.0
    volumes:
      - ./router:/dist/config/
    ports:
      - "4000:4000"
    command: -c config/router.yaml
    networks:
      - dev-net

  postgres:
    image: postgres:16
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${CONSTRUCTION_SYSTEM_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONSTRUCTION_SYSTEM_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CONSTRUCTION_SYSTEM_POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    networks:
      - dev-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  postgres-migration:
    image: liquibase/liquibase:4.27-alpine
    command:
      - --driver=org.postgresql.Driver
      - --changeLogFile=db.changelog-master.xml
      - --url=jdbc:postgresql://postgres:5432/construction-system
      - --username=${CONSTRUCTION_SYSTEM_POSTGRES_USER:-user}
      - --password=${CONSTRUCTION_SYSTEM_POSTGRES_PASSWORD:-password}
      - update
    volumes:
      - ./db/db.changelog-master.xml:/liquibase/db.changelog-master.xml
      - ./db/DDL:/liquibase/DDL
      - ./db/DML:/liquibase/DML
      - ./db/reports:/liquibase/reports
    networks:
      - dev-net
    restart: no
    depends_on:
      postgres:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
#      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
#      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_POSTGRES_DB}
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    ports:
      - "9091:8080"
    volumes:
#      - ./keycloak/required:/opt/keycloak/data/export
      - ./keycloak/data:/opt/keycloak/data/import
    networks:
      - dev-net
    depends_on:
      - keycloak-db

  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    environment:
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB:-keycloak-db}
    ports:
      - "5432:5432"
    volumes:
      - keycloak-db-data-dev:/var/lib/postgresql/data
    networks:
      - dev-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"    # Web UI
      - "4317:4317"      # OTLP/gRPC
      - "4318:4318"      # OTLP/HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    volumes:
      - ./jaeger-collector-config.yaml:/etc/jaeger/collector.yaml
    networks:
      - dev-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dev-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - dev-net
    depends_on:
      - prometheus

volumes:
  postgres-data-dev:
    driver: local
  grafana-data:
    driver: local
  keycloak-db-data-dev:
    driver: local


networks:
  dev-net:
    driver: bridge
