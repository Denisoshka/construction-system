[versions]
spring-boot = "3.4.2"
postgresql = "42.7.5"
r2dbc_postgresql = "0.8.10.RELEASE"
micrometer_prometheus = "1.9.1"
dependency-management = "1.1.7"
gson = "2.12.1"  # Указываем нужную версию Gson
lombok = "1.18.24"
spring_graphql = "1.0.0"
reactor_resilience4j = "1.0.0"
dgs-codegen = "7.0.3"
cloud-ver = "4.2.0"
spring_boot_starter_logging = "3.4.2"
logback = "1.5.16"

[plugins]
spring_boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
dgs_codegen = { id = "com.netflix.dgs.codegen", version.ref = "dgs-codegen" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }


[libraries]
spring_boot_actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "spring-boot" }
spring_boot_data_jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-jdbc", version.ref = "spring-boot" }
spring_boot_data_jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring_boot_data_r2dbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-r2dbc", version.ref = "spring-boot" }
spring_boot_graphql = { group = "org.springframework.boot", name = "spring-boot-starter-graphql", version.ref = "spring-boot" }
spring_boot_jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring_boot_oauth2_authorization_server = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-authorization-server", version.ref = "spring-boot" }
spring_boot_oauth2_client = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring_boot_oauth2_resource_server = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-resource-server", version.ref = "spring-boot" }
spring_boot_security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring_boot_web = { group = "org.springframework.boot", name = "spring-boot-starter-web", version.ref = "spring-boot" }
spring_boot_webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "spring-boot" }
spring_boot_starter_logging = { group = "org.springframework.boot", name = "spring-boot-starter-logging", version.ref = "spring_boot_starter_logging" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
spring_cloud_gateway = { group = "org.springframework.cloud", name = "spring-cloud-starter-gateway", version.ref = "cloud-ver" }
#spring_cloud_discowery = { group = "org.springframework.cloud", name = "spring-cloud-starter-discovery", version.ref = "cloud-ver" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
r2dbc_postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc_postgresql" }
micrometer_prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometer_prometheus" }
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }
spring_graphql = { group = "org.springframework.graphql", name = "spring-graphql", version.ref = "spring_graphql" }
reactor_test = { group = "io.projectreactor", name = "reactor-test", version.ref = "reactor_resilience4j" }
spring_boot_test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "spring-boot" }
spring_security_test = { group = "org.springframework.security", name = "spring-security-test", version.ref = "spring-boot" }
#slf4j_api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
logback_classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
spring-cloud-starter-netflix-eureka-server = { group = "org.springframework.cloud", name = "spring-cloud-starter-netflix-eureka-server", version.ref = "cloud-ver" }
spring-cloud-starter-netflix-eureka-client = { group = "org.springframework.cloud", name = "spring-cloud-starter-netflix-eureka-client", version.ref = "cloud-ver" }


junit_platform_launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version = "1.7.2" }

