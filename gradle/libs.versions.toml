[versions]
spring-boot = "3.4.3"
postgresql = "42.7.5"
r2dbc_postgresql = "0.8.10.RELEASE"
micrometer_prometheus = "1.9.1"
dependency-management = "1.1.7"
gson = "2.12.1"
lombok-ver = "1.18.36"
spring_graphql = "1.0.0"
reactor_resilience4j = "1.0.0"
cloud-ver = "4.2.0"
spring_boot_starter_logging = "3.4.2"
logback = "1.5.16"
docker_plugin = "0.36.0"
dgs-codegen = "7.0.3"
dgs-ver = "10.0.4"
dgs-extended-scalars-ver = "10.0.3"
mapstruct-ver = "1.6.3"
caffeine-ver = "3.2.0"

[plugins]
spring_boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
dgs_codegen = { id = "com.netflix.dgs.codegen", version.ref = "dgs-codegen" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }


[libraries]
spring_boot_actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "spring-boot" }
spring_boot_data_jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-jdbc", version.ref = "spring-boot" }
spring_boot_data_jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring_boot_data_r2dbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-r2dbc", version.ref = "spring-boot" }
spring_boot_graphql = { group = "org.springframework.boot", name = "spring-boot-starter-graphql", version.ref = "spring-boot" }
spring_boot_jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-jdbc", version.ref = "spring-boot" }
spring_boot_oauth2_authorization_server = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-authorization-server", version.ref = "spring-boot" }
spring_boot_oauth2_client = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring_boot_oauth2_resource_server = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-resource-server", version.ref = "spring-boot" }
spring_boot_security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring_boot_web = { group = "org.springframework.boot", name = "spring-boot-starter-web", version.ref = "spring-boot" }
spring_boot_webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "spring-boot" }
spring_boot_starter_logging = { group = "org.springframework.boot", name = "spring-boot-starter-logging", version.ref = "spring_boot_starter_logging" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
spring_cloud_gateway = { group = "org.springframework.cloud", name = "spring-cloud-starter-gateway", version.ref = "cloud-ver" }
#spring_cloud_discowery = { group = "org.springframework.cloud", name = "spring-cloud-starter-discovery", version.ref = "cloud-ver" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
r2dbc_postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc_postgresql" }
micrometer_prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometer_prometheus" }
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok-ver" }
spring_graphql = { group = "org.springframework.graphql", name = "spring-graphql", version.ref = "spring_graphql" }
reactor_test = { group = "io.projectreactor", name = "reactor-test", version.ref = "reactor_resilience4j" }
spring_boot_test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "spring-boot" }
spring_security_test = { group = "org.springframework.security", name = "spring-security-test", version.ref = "spring-boot" }
#slf4j_api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
logback_classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
spring-cloud-starter-netflix-eureka-server = { group = "org.springframework.cloud", name = "spring-cloud-starter-netflix-eureka-server", version.ref = "cloud-ver" }
spring-cloud-starter-netflix-eureka-client = { group = "org.springframework.cloud", name = "spring-cloud-starter-netflix-eureka-client", version.ref = "cloud-ver" }
spring-boot-docker-compose = { group = "org.springframework.boot", name = "spring-boot-docker-compose", version.ref = "spring-boot" }
junit_platform_launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version = "1.7.2" }
netflix-dgs = { group = "com.netflix.graphql.dgs", name = "graphql-dgs-spring-graphql-starter", version.ref = "dgs-ver" }
netflix-dgs-extended-scalars = { group = "com.netflix.graphql.dgs", name = "graphql-dgs-extended-scalars", version.ref = "dgs-extended-scalars-ver" }
netflix-dgs-test = {group = "com.netflix.graphql.dgs", name = "dgs-starter-test", version.ref = "dgs-ver"}
mapstruct-impl = { group = "org.mapstruct", name = "mapstruct", version.ref = "mapstruct-ver" }
mapstruct-annotationprocessor = { group = "org.mapstruct", name = "mapstruct-processor", version.ref = "mapstruct-ver" }
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine-ver" }
#graphql-java = { group = "com.graphql-java", name = "graphql-java", version.ref = "graphql-java-ver" }
#graphql-java-dataloader = { group = "com.graphql-java", name = "java-dataloader", version.ref = "graphql-java-dataloader-ver" }