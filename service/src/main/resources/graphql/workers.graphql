scalar Date
@specifiedBy(url:"https://tools.ietf.org/html/rfc3339")

type Employee {
    systemId: String!
    name: String!
    surname: String!
    patronymic : String
    employmentDate : Date!
    post: String
    position: String
}

type EngineerPosition{
    id: Int!
    name : String!
}

type WorkerPosition{
    id: Int!
    name : String!
}

type Query {
    getEmployee(systemId: String!): Employee
    getEmployees(pagination: Pagination) : [Employee!]
    getEngineers(pagination: Pagination) :[String!]
    getWorkers(pagination: Pagination) : [String!]
    getEngineerPositions(pagination: Pagination) : [EngineerPosition!]
    getWorkersPositions(pagination: Pagination) : [WorkerPosition!]
}

input Pagination {
    page: Int!
    pageSize: Int!
}

input EmployeeInput {
    systemId: String!
    name: String!
    surname: String!
    patronymic : String
    post: String
    positionId: Int
}

input WorkerPositionInput {
    name : String!
}

input EngineerPositionInput {
    name : String!
}

type Mutation {
    createEmployee(input: EmployeeInput!): Employee!
    updateEmployee(input: EmployeeInput!): Employee!
    deleteEmployee(systemId: String!) : Boolean!

    createEngineerPosition(input : EngineerPositionInput!) :EngineerPosition!
    updateEngineerPosition(id :Int!,input: EngineerPositionInput!): EngineerPosition!
    deleteEngineerPosition(id :Int!) : Boolean!

    createWorkerPosition(input: WorkerPositionInput!) :WorkerPosition!
    updateWorkerPosition(id :Int!,input: WorkerPositionInput!): EngineerPosition!
    deleteWorkerPosition(id :Int!) : Boolean!
}
