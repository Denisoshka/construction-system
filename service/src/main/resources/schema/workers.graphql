scalar Date
@specifiedBy(url:"https://tools.ietf.org/html/rfc3339")

enum JobPost {
  UNKNOWN
  ENGINEER
  WORKER
}

interface Employee {
  id: ID!
  systemId: String!
  name: String!
  surname: String!
  patronymic : String
  employmentDate : Date!
}

type EmployeeInfo implements Employee {
  id: ID!
  systemId: String!
  name: String!
  surname: String!
  patronymic : String
  employmentDate : Date!
  post : JobPost!
}

type EngineerInfo {
  employee: EmployeeInfo!
  positionInfo : EngineerPosition!
}

type WorkerInfo {
  employee: EmployeeInfo!
  positionInfo : WorkerPosition!
}

type EngineerPosition {
  id: Int!
  name : String!
}

type WorkerPosition {
  id: Int!
  name : String!
}

input Pagination {
  page: Int!
  pageSize: Int!
}

input Sort {
  field : String!
  sortAsc : Boolean!
}

input EngineerFilter{
  posId : Int
}

input WorkerFilter{
  posId : Int
}

input EmployeeFilter{
  post : String
}

input EmployeeInput   {
  systemId: String!
  name: String!
  surname: String!
  patronymic : String
}

input WorkerPositionInput {
  name : String!
}

input EngineerPositionInput {
  name : String!
}

extend type Query {
  employee(id: ID!) : EmployeeInfo!
  employees(
    pagination: Pagination!, employeeFilter: EmployeeFilter
  ): [EmployeeInfo!]!

  worker(id :ID!) : WorkerInfo!
  workers(pagination : Pagination!, filter: WorkerFilter): [WorkerInfo!]!
  workersByBrigade(id: ID!, pagination : Pagination!): [WorkerInfo!]!
  workerPosition(id : Int!): WorkerPosition!
  workerPositionByName(name: String!): WorkerPosition!
  workersPositions(pagination : Pagination!): [WorkerPosition!]!

  engineer(id: ID!): EngineerInfo!
  engineers(
    pagination: Pagination, engineerFilter: EngineerFilter
  ): [EngineerInfo!]!
  engineerPosition(id: Int!): EngineerPosition!
  engineerPositionByName(name: String!): EngineerPosition!
  engineersPositions(pagination: Pagination!): [EngineerPosition!]!
}

type Mutation {
  createEmployee(input: EmployeeInput!): EmployeeInfo!
  updateEmployee(id: ID!, input: EmployeeInput!): EmployeeInfo!
  deleteEmployee(id: ID!) : Boolean!

  createEngineerPosition(input : EngineerPositionInput!): EngineerPosition!
  updateEngineerPosition(
    id :Int!,input : EngineerPositionInput!
  ): EngineerPosition!
  deleteEngineerPosition(id :Int!) : Boolean!

  createWorkerPosition(input : WorkerPositionInput!): WorkerPosition!
  updateWorkerPosition(id :Int!,input: WorkerPositionInput!): EngineerPosition!
  deleteWorkerPosition(id :Int!): Boolean!
}
